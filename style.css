
/* Dropdown and upload button container */
.dropdown-container {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
    padding: 8px 12px 0 12px; /* reduced padding */
    margin-bottom: 6px; /* reduced margin */
    width: 100%;
    box-sizing: border-box;
    flex-wrap: wrap; /* Allow wrapping on mobile */
}

/* Mobile-first responsive controls */
@media (max-width: 768px) {
    .dropdown-container {
        flex-direction: column;
        gap: 8px;
        padding: 8px;
    }
    
    .dropdown-container > * {
        width: 100%;
        max-width: 300px;
        text-align: center;
    }
    
    .k-control {
        flex-direction: column !important;
        align-items: center !important;
        gap: 4px !important;
    }
    
    .k-control .k-hint {
        width: auto !important;
        text-align: center;
        white-space: normal;
    }
    
    .stray-control {
        justify-content: center !important;
    }
}

/* k slider control styling */
.k-control {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    background: transparent;
    padding: 6px 8px;
    border-radius: 8px;
}
.k-control .k-label {
    font-weight: 700;
    color: #374151;
    margin-right: 4px;
}
.k-control input[type="range"] {
    width: 140px;
}
.k-control #kValue {
    min-width: 20px;
    text-align: center;
    font-weight: 600;
    color: #111827;
}
.k-control .k-hint {
    margin-left: 8px;
    font-size: 0.85rem;
    color: #6b7280;
    display: inline-block;
    width: 110px;
    white-space: pre-line;
}

/* Make the document fill the viewport and prevent page scrolling */
html, body {
    height: 100%;
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    overflow-x: hidden; /* prevent horizontal scrolling */
}

/* Mobile adjustments for body */
@media (max-width: 768px) {
    html, body {
        overflow: auto; /* Allow scrolling on mobile */
        height: auto;
        min-height: 100vh;
    }
    
    body {
        --header-controls-height: 120px; /* More space for mobile controls */
    }
}

/* Make box-sizing inherit everywhere so padding/border are included in width/height calculations */
* , *::before, *::after {
    box-sizing: inherit;
}

/* Dropdown menu styling */
#imageSelect {
    font-size: 0.95rem;
    padding: 8px 16px; /* reduced padding */
    border-radius: 10px;
    border: 1px solid #d1d5db; /* subtle gray */
    background: #fff;
    color: #111827;
    box-shadow: 0 1px 6px rgba(16,24,40,0.04);
    min-width: 200px; /* reduced min-width */
    max-width: 520px;
    appearance: none;
    transition: border-color 0.2s, box-shadow 0.2s;
}
#imageSelect:focus, #imageSelect:hover {
    border-color: #3b82f6;
    box-shadow: 0 6px 20px rgba(59,130,246,0.08);
}

/* Mobile adjustments for form elements */
@media (max-width: 768px) {
    #imageSelect {
        font-size: 0.9rem;
        padding: 12px 16px;
        min-width: auto;
        width: 100%;
        max-width: 100%;
    }
    
    .home-btn, #rerunBtn {
        font-size: 0.9rem;
        padding: 12px 16px;
        width: 100%;
        max-width: 200px;
    }
    
    #downloadBtn {
        font-size: 0.8rem;
        padding: 10px 14px;
        width: 100%;
        max-width: 160px;
    }
    
    .dropdown-label {
        font-size: 0.9rem;
        margin-bottom: 4px;
    }
}

/* Upload button styling to match dropdown */
#uploadBtn {
    font-size: 0.95rem;
    padding: 8px 16px; /* reduced padding */
    border-radius: 10px;
    border: 1px solid #d1d5db;
    background: #ffffff;
    color: #111827;
    box-shadow: 0 1px 6px rgba(16,24,40,0.04);
    outline: none;
    cursor: pointer;
    transition: border-color 0.2s, box-shadow 0.2s, background 0.2s;
}
#uploadBtn:focus, #uploadBtn:hover {
    border-color: #3b82f6;
    background: #f8fbff;
    box-shadow: 0 8px 26px rgba(59,130,246,0.06);
}

/* Upload image box */
.upload-image-box {
    border: 2px dashed #1976d2;
    background: #f0f6ff;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 140px;
    height: 140px;
    box-sizing: border-box;
    font-size: 1.2em;
    text-align: center;
    padding: 0;
}

/* Gallery container */
#gallery {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: flex-start;
    gap: 24px;
    padding: 16px 0 8px 0;
    box-sizing: border-box;
    width: 100vw;
    max-width: 100vw;
    height: calc(100vh - var(--header-controls-height, 120px));
    margin: 0 auto;
    overflow-x: hidden;
    overflow-y: auto;
    background: #fff;
    border-radius: 12px;
    box-shadow: 0 2px 12px rgba(0,0,0,0.07);
}

/* Individual image container */
.image-container {
    width: 140px;
    height: 180px;
    min-width: 140px;
    min-height: 180px;
    max-width: 140px;
    max-height: 180px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;
    background: #f8f8f8;
    border-radius: 8px;
    box-shadow: 0 1px 6px rgba(0,0,0,0.05);
    margin: 0;
    padding: 8px 0 0 0;
    transition: box-shadow 0.2s, transform 0.2s;
    box-sizing: border-box;
}
.image-container:hover {
    box-shadow: 0 4px 16px rgba(25, 118, 210, 0.12);
    transform: scale(1.04);
    z-index: 2;
    will-change: transform;
    overflow: visible;
}

.image-container img {
    width: 140px;
    height: 140px;
    object-fit: contain;
    border-radius: 4px;
    margin-bottom: 8px;
    cursor: pointer;
    transition: box-shadow 0.2s, transform 0.2s;
}
.image-container img:hover {
    box-shadow: 0 4px 16px rgba(25, 118, 210, 0.18);
    transform: scale(1.06);
    z-index: 2;
}

.image-label {
    font-size: 0.95em;
    color: #333;
    word-break: break-all;
}

.upload-label {
    font-size: 1.3em;
    font-weight: bold;
    color: #1976d2;
    margin-top: 32px;
    margin-bottom: 32px;
    cursor: pointer;
    transition: color 0.2s;
    text-align: center;
}
.upload-label:hover {
    color: #1565c0;
}

/* Plot and reconstruction side-by-side container */
.plot-area {
    display: flex;
    flex-direction: row;
    gap: 12px;
    align-items: flex-start;
    padding: 8px 12px 12px 12px;
    box-sizing: border-box;
    width: 100%;
    max-width: 100vw;
    overflow-x: hidden;
}

.plot-box {
    flex: 1 1 auto;
    min-width: 0; /* allow shrinking inside flex container */
    width: 100%;
    height: 100%;
    max-height: 760px;
    box-sizing: border-box;
}

.recon-box {
    width: 420px;
    max-width: 45%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;
    padding: 12px;
    background: #fafafa;
    border: 1px solid #eee;
    border-radius: 8px;
    min-height: 160px;
    box-sizing: border-box;
    overflow: auto;
}

/* Make layout vertical on narrow screens */
@media (max-width: 900px) {
    .plot-area { flex-direction: column; }
    .recon-box { width: 100%; max-width: none; }
    .plot-box { height: 50vh; }
}

/* Two column layout that contains controls on left and plot/recon on right */
.content-columns {
    display: block;
    padding: 4px 8px 8px 8px; /* reduced padding */
    box-sizing: border-box;
    max-width: 100vw;
    overflow-x: hidden;
}
.controls-panel {
    grid-column: 1 / -1;
    width: 100%;
    background: transparent;
    padding-bottom: 4px; /* reduced padding */
}

/* Define total header + controls height for content sizing */
body {
    --header-controls-height: 100px; /* header ~50px + controls 50px */
}

/* Header wrapper centers the title and controls within a constrained width */
.header-wrapper {
    max-width: 980px;
    margin: 0 auto;
    padding: 4px 12px; /* reduced top padding to save space */
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    align-items: center;
}

/* Mobile content adjustments */
@media (max-width: 768px) {
    .content-columns {
        padding: 4px 8px 8px 8px;
    }
    
    .header-wrapper {
        max-width: 100%;
        padding: 4px 8px;
    }
    
    .controls-panel {
        padding-bottom: 12px;
    }
}

@media (max-width: 900px) {
    .content-columns { grid-template-columns: 1fr; }
    .controls-panel { position: static; grid-column: auto; }
}

/* Two-column full-width container for plot and reconstruction */
.two-col-container {
    /* span the full viewport width while remaining centered in the layout */
    position: relative;
    left: calc(50% - 50vw);
    width: 100vw;
    display: flex;
    gap: 12px;
    box-sizing: border-box;
    padding: 0 12px;
}
.two-col-container .left-col,
.two-col-container .right-col {
    flex: 1 1 50%;
    min-width: 0; /* allow shrinking to avoid overflow */
}

@media (max-width: 900px) {
    .two-col-container { flex-direction: column; }
    .two-col-container .left-col, .two-col-container .right-col { width: 100%; }
}

/* Three-column variant: summary | plot | recon */
.three-col-container {
    position: relative;
    left: calc(50% - 50vw);
    width: 100vw;
    display: flex;
    gap: 8px; /* reduced gap */
    box-sizing: border-box;
    padding: 0 8px; /* reduced padding */
    align-items: flex-start;
}
/* Fill remaining viewport height under controls; avoid body scrolling */
.three-col-container {
    height: calc(100vh - var(--header-controls-height, 100px));
    overflow: hidden;
}
.three-col-container .summary-col {
    width: 200px; /* reduced width */
    flex: 0 0 200px;
}
.three-col-container .summary-box {
    background: #fff;
    border: 1px solid #eee;
    padding: 8px; /* reduced padding */
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.04);
}
.three-col-container .left-col { flex: 1 1 0; min-width: 0; height: 100%; }
.three-col-container .right-col { flex: 1 1 0; min-width: 0; height: 100%; }

/* Make recon-box fill its column */
.recon-box {
    width: 100%;
    max-width: none;
}

/* Recon column sub-areas */
.recon-original, .recon-reconstructed {
    width: 100%;
    box-sizing: border-box;
    padding: 8px 16px;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    /* fixed visual display height so original and reconstructed match */
    --recon-display-height: 220px;
    height: var(--recon-display-height);
    min-height: var(--recon-display-height);
    max-height: var(--recon-display-height);
    overflow: hidden; /* Prevent any content from spilling out */
}
.recon-label {
    flex: 0 0 80px; /* fixed column for label */
    text-align: left;
    font-weight: 600;
    color: #374151;
    font-size: 0.75rem; /* Smaller font size */
    line-height: 1.2; /* Tighter line height for wrapping */
    word-wrap: break-word; /* Enable word wrapping */
    overflow-wrap: break-word; /* Additional wrapping support */
    white-space: normal; /* Allow text to wrap */
}
.recon-row {
    display: flex;
    align-items: center;
    gap: 8px;
    width: 100%;
}
.recon-media {
    flex: 0 0 auto; /* Don't grow/shrink, use explicit size */
    min-width: 0; /* allow proper flex shrinking */
    display: block;
    border: 1px solid #e6e6e6;
    box-shadow: 0 2px 8px rgba(0,0,0,0.04);
    box-sizing: border-box;
    /* Ensure both img and canvas elements size identically */
    max-width: 100%;
    max-height: 100%;
    /* Identical margins, padding, and background for both elements */
    margin: 0;
    padding: 0;
    background: transparent;
    /* Prevent overflow and ensure proper containment */
    overflow: hidden;
    /* Use fill object-fit to match canvas behavior */
    object-fit: fill;
}

/* Ensure canvas elements also respect object-fit-like behavior */
.recon-media[data-type="canvas"] {
    object-fit: initial; /* Canvas doesn't use object-fit, but we'll handle sizing in JS */
}
.recon-swatches {
    display: flex;
    gap: 8px;
    padding: 12px 16px 24px 16px; /* reduced bottom padding so swatches don't get cut off */
    justify-content: center;
    align-items: center;
}

/* Keep swatches centered under the image area (to the right of the label).
   Insert a left spacer equal to the label column so the remaining space centers the swatches. */
.recon-swatches::before {
    content: '';
    flex: 0 0 70px; /* Match mobile label width for consistency */
}

@media (max-width: 900px) {
    .recon-original, .recon-reconstructed { --recon-display-height: 150px; }
}

/* Ensure plot and recon fill their column heights and scroll internally if content exceeds */
.plot-box {
    height: 100%;
    overflow: hidden; /* no internal scrolling */
    display: flex;
    align-items: center;
    justify-content: center;
}

/* Ensure any canvas/img inside recon-box use the same sizing model as .recon-media
   - keep height fixed to the parent's display height and let width auto-scale
   - avoid height:auto here which would break the intended fixed visual height */
.recon-box canvas, .recon-box img {
    width: auto;
    height: 100%;
    max-height: none;
    display: block;
    box-sizing: border-box;
}

@media (max-width: 900px) {
    .three-col-container { 
        flex-direction: column; 
        left: 0; 
        width: 100%; 
        height: auto;
        overflow: visible;
        padding: 8px;
        gap: 16px;
    }
    .three-col-container .summary-col, 
    .three-col-container .right-col { 
        width: 100%; 
        flex: none; 
    }
    .three-col-container .left-col {
        width: 100%;
        height: 50vh; /* Give plot reasonable height on mobile */
        min-height: 300px;
    }
    .three-col-container .summary-col {
        order: 1; /* Summary first */
    }
    .three-col-container .right-col {
        order: 2; /* Images second */
    }
    .three-col-container .left-col {
        order: 3; /* Plot last on mobile */
    }
}

/* Mobile-specific image layout */
@media (max-width: 768px) {
    .three-col-container {
        padding: 4px;
        gap: 8px;
    }
    
    .three-col-container .left-col {
        width: 100%;
        height: 40vh; /* Reduced from 50vh for better space utilization */
        min-height: 280px; /* Reduced from 320px to prevent cutoff */
        padding-bottom: 15px; /* Reduced extra space for plot labels */
    }
    
    /* Stack images vertically on small screens */
    .recon-original, .recon-reconstructed {
        --recon-display-height: 160px;
        min-height: 160px;
        max-height: 160px;
        padding: 6px 10px;
        display: flex;
        align-items: center;
        justify-content: flex-start; /* Ensure consistent alignment */
    }
    
    .recon-label {
        flex: 0 0 70px;
        font-size: 0.7rem; /* Even smaller on mobile */
        text-align: left;
        align-self: flex-start; /* Align to top to prevent pushing */
        line-height: 1.2;
        word-wrap: break-word;
        overflow-wrap: break-word;
        white-space: normal;
        padding-top: 2px; /* Small top padding for better alignment */
    }
    
    /* Ensure recon-row alignment on mobile */
    .recon-row {
        display: flex;
        align-items: center;
        justify-content: flex-start;
        gap: 6px; /* Slightly reduced gap for mobile */
        width: 100%;
    }
    
    /* Ensure consistent image alignment on mobile */
    .recon-media {
        display: block;
        margin: 0 auto; /* Center horizontally */
        align-self: center; /* Center within flex container */
        border: 1px solid #e6e6e6; /* Ensure border is preserved on mobile */
        box-shadow: 0 2px 8px rgba(0,0,0,0.04); /* Ensure shadow is preserved on mobile */
        box-sizing: border-box;
        /* Don't override width/height set by JavaScript */
        max-width: none !important;
        max-height: none !important;
        object-fit: fill !important; /* Ensure consistent object-fit behavior */
    }
    
    /* Force consistent container alignment */
    .recon-original .recon-row,
    .recon-reconstructed .recon-row {
        align-items: flex-start; /* Align to top to prevent label from pushing image */
        justify-content: flex-start;
        min-height: 140px; /* Ensure consistent container height */
    }
    
    /* Make plot more touch-friendly and ensure full visibility */
    .plot-box {
        touch-action: manipulation;
        padding: 10px; /* Add padding to prevent label cutoff */
        margin-bottom: 20px; /* Extra bottom margin for axis labels */
    }
}

/* Page title and subtitle */
.page-title {
    margin: 2px 0 0 0;
    padding: 0;
    font-family: Inter, system-ui, -apple-system, 'Segoe UI', Roboto, 'Helvetica Neue', Arial;
    font-size: 1.25rem;
    font-weight: 700;
    letter-spacing: 0.2px;
    color: #222;
    text-align: center;
}

/* Mobile title adjustments */
@media (max-width: 768px) {
    .page-title {
        font-size: 1.1rem;
        margin: 2px 0;
        line-height: 1.3;
    }
    
    .header-wrapper {
        padding: 4px 8px;
    }
}

/* When centering controls, keep dropdown and upload compact on wide screens */
.controls-panel .dropdown-container {
    justify-content: center;
    max-width: 980px;
    width: 100%;
    box-sizing: border-box;
    padding: 4px 8px 0 8px; /* reduced top padding */
    margin: 0 auto;
}

/* Tidy the select and upload button for a cleaner header */
#imageSelect {
    font-size: 1rem;
    padding: 10px 18px;
    border-radius: 10px;
    border: 1px solid #d1d5db; /* subtle gray */
    background: #fff;
    color: #111827;
    box-shadow: 0 1px 6px rgba(16,24,40,0.04);
    min-width: 220px;
    max-width: 520px;
}
#imageSelect:focus, #imageSelect:hover {
    border-color: #3b82f6;
    box-shadow: 0 6px 20px rgba(59,130,246,0.08);
}

#uploadBtn {
    font-size: 1rem;
    padding: 10px 18px;
    border-radius: 10px;
    border: 1px solid #d1d5db;
    background: #ffffff;
    color: #111827;
    box-shadow: 0 1px 6px rgba(16,24,40,0.04);
}
#uploadBtn:focus, #uploadBtn:hover {
    border-color: #3b82f6;
    background: #f8fbff;
    box-shadow: 0 8px 26px rgba(59,130,246,0.06);
}

/* Stray pixel removal control styling */
.stray-control {
    display: inline-flex;
    align-items: center;
    gap: 6px;
    background: transparent;
    padding: 6px 8px;
    border-radius: 8px;
    margin-left: 8px;
}
.stray-control input[type="checkbox"] {
    width: 16px;
    height: 16px;
    accent-color: #3b82f6;
    cursor: pointer;
}
.stray-control .stray-label {
    font-weight: 600;
    color: #374151;
    font-size: 0.9rem;
    cursor: pointer;
    user-select: none;
}
.stray-control .stray-hint {
    font-size: 0.8rem;
    color: #6b7280;
    margin-left: 4px;
}

/* Style the home button to match other controls */
.home-btn {
    font-size: 0.95rem;
    padding: 8px 16px; /* reduced padding */
    border-radius: 10px;
    border: 1px solid #d1d5db;
    background: #ffffff;
    color: #111827;
    box-shadow: 0 1px 6px rgba(16,24,40,0.04);
    text-decoration: none;
    display: inline-block;
    cursor: pointer;
    transition: border-color 0.2s, background 0.2s, box-shadow 0.2s;
}
.home-btn:focus, .home-btn:hover {
    border-color: #3b82f6;
    background: #f8fbff;
    box-shadow: 0 8px 26px rgba(59,130,246,0.06);
}

/* Style the rerun clustering button to match other controls */
#rerunBtn {
    font-size: 0.95rem;
    padding: 8px 16px; /* reduced padding */
    border-radius: 10px;
    border: 1px solid #d1d5db;
    background: #ffffff;
    color: #111827;
    box-shadow: 0 1px 6px rgba(16,24,40,0.04);
    outline: none;
    cursor: pointer;
    transition: border-color 0.2s, background 0.2s, box-shadow 0.2s;
}
#rerunBtn:focus, #rerunBtn:hover {
    border-color: #3b82f6;
    background: #f8fbff;
    box-shadow: 0 8px 26px rgba(59,130,246,0.06);
}

/* Style the download button to match other controls */
#downloadBtn {
    font-size: 0.8rem;
    padding: 8px 10px;
    border-radius: 10px;
    border: 1px solid #d1d5db;
    background: #ffffff;
    color: #111827;
    box-shadow: 0 1px 6px rgba(16,24,40,0.04);
    outline: none;
    cursor: pointer;
    transition: border-color 0.2s, background 0.2s, box-shadow 0.2s;
}
#downloadBtn:focus, #downloadBtn:hover {
    border-color: #3b82f6;
    background: #f8fbff;
    box-shadow: 0 8px 26px rgba(59,130,246,0.06);
}

/* Dropdown label styling */
.dropdown-label {
    font-size: 1rem;
    font-weight: 600;
    color: #374151;
    margin-right: 8px;
    white-space: nowrap;
}